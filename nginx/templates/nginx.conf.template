proxy_ignore_client_abort on;
send_timeout            360;
lingering_timeout       360;
client_max_body_size 20M;

server {
	
	server_name ${DOMAIN_BACKEND} www.${DOMAIN_BACKEND};

	location /api/v1/ {
	        if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,x-auth-token,x-one-time-manager-token';
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain; charset=utf-8';
                        add_header 'Content-Length' 0;
                        return 204;
                }

                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,x-auth-token,x-one-time-manager-token' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

                proxy_pass http://127.0.0.1:3005;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
		
	listen 443 ssl;
	ssl_certificate /etc/letsencrypt/live/${DOMAIN_BACKEND}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_BACKEND}/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;	
}

server {
	if ($host = www.${DOMAIN_BACKEND}) {
		return 301 https://$host$request_uri;
	}

	if ($host = ${DOMAIN_BACKEND}) {
		return 301 https://$host$request_uri;
	}

	server_name ${DOMAIN_BACKEND} www.${DOMAIN_BACKEND};
	listen 80;
	return 404;
}
